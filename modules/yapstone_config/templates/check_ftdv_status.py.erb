#!/usr/bin/env python

import os
import sys
import time
import requests
import boto.vpc
from boto.vpc import VPCConnection

insideFTDv1 = '<%= @ftdv1_ip %>'
insideFTDv2 = '<%= @ftdv2_ip %>'
eniFTDv1 = '<%= @ftdv1_eni %>'
eniFTDv2 = '<%= @ftdv2_eni %>'
routeTable = '<%= @ftdv_routetable %>'
vpc = boto.vpc.connect_to_region('<%= @aws_region %>')
rtb = vpc.get_all_route_tables(route_table_ids=routeTable)
apiURL = 'https://<%= @apiurl %>'
headers = {'content-type': "application/json", 'cache-control': "no-cache"}

def routePdFTDV1():
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='0.0.0.0/0',
                      interface_id=eniFTDv1)
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='<%= @ftdv_vpn_ip1 %>',
                      interface_id=eniFTDv1)
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='<%= @ftdv_vpn_ip2 %>',
                      interface_id=eniFTDv1)

def routePdFTDV2():
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='0.0.0.0/0',
                      interface_id=eniFTDv2)
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='<%= @ftdv_vpn_ip1 %>',
                      interface_id=eniFTDv2)
    vpc.replace_route(route_table_id=routeTable,
                      destination_cidr_block='<%= @ftdv_vpn_ip2 %>',
                      interface_id=eniFTDv2)

for rt in rtb:
    for a in rt.routes:
        eniRTB = a.interface_id

valid = True
while valid:
    insidePing1 = os.system("ping -c 15 -w 5 "+insideFTDv1+"|grep -c '100% packet loss'")
    insidePing2 = os.system("ping -c 15 -w 5 "+insideFTDv2+"|grep -c '100% packet loss'")

    # insidePing1 IP exit with 0 failure
    # Lock file doesn't exsist
    if insidePing1 == 0 and (not os.path.isfile('/tmp/ftdv_lock')):
        # if eniRTB not equal to ENI2 then change route
        if eniRTB == eniFTDv1:
            routePdFTDV2()
            payload = '{ "HostName":"<%= @hostname %>", "Status":"0", "Comments": "FAILURE FTDv1: Changing to FTDv2 route, ENI = <%= @ftdv2_eni %>" }'
            response = requests.post(apiURL, data=payload, headers=headers)

            with open('/var/log/ftdv.log', 'a') as f:
                sys.stdout = f
                print time.strftime("%c"), ": ", "FAILURE <%= @aws_region %>: Changing to FTDv2 route, , ENI = ", eniFTDv2, response.text

                # insidePing2 IP exit with 0 failure
                # insidePing1 exit with 256 code
                if insidePing2 == 0 and insidePing1 == 256:

                    if eniRTB == eniFTDv2:
                        routePdFTDV1()
                        os.system('/bin/touch /tmp/ftdv_lock')
                        payload = { "HostName":"<%= @hostname %>", "Status":"0", "Comments": "FAILURE FTDv2: Changing to FTDv1 route, ENI = <%= @ftdv1_eni %>" }
                        response = requests.post(apiURL, data=payload, headers=headers)

                        with open('/var/log/ftdv.log', 'a') as f:
                            sys.stdout = f
                            print time.strftime("%c"), ": ", "FAILURE <%= @aws_region %>: Changing to FTDv1 route, ENI = ", eniFTDv1, response.text

    elif eniRTB == eniFTDv1:
        payload = '{ "HostName":"<%= @hostname %>", "Status":"1", "Comments": "insideFTDv1 => <%= @ftdv1_ip %> is up & using <%= @ftdv1_eni %>" }'
        response = requests.post(apiURL, data=payload, headers=headers)

        with open('/var/log/ftdv.log', 'a') as f:
            sys.stdout = f
            print time.strftime("%c"), ": insideFTDv1 => <%= @ftdv1_ip %> is up & ENI =>", eniFTDv1, response.text, insidePing1, insidePing2

    elif eniRTB == eniFTDv2:
        payload = '{ "HostName":"<%= @hostname %>", "Status":"1", "Comments": "insideFTDv2 => <%= @ftdv2_ip %> is up & using <%= @ftdv2_eni %>" }'
        respose = requests.post(apiURL, data=payload, headers=headers)

        with open('/var/log/ftdv.log', 'a') as f:
            sys.stdout = f
            print time.strftime("%c"), ": insideFTDv2 => <%= @ftdv2_ip %> is up & ENI =>", eniFTDv2, response.text, insidePing1, insidePing2
